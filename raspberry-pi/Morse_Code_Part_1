#type:ignore
import board
import digitalio
import time 
ledr = digitalio.DigitalInOut(board.GP16)
ledr.direction = digitalio.Direction.OUTPUT 

class MorseCodeTranslator:
 
    def __init__(self):
      
        self.morse_code_dict = { #Morse code dictionary
            'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.', 'G': '--.', 'H': '....',
            'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---', 'P': '.--.',
            'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
            'Y': '-.--', 'Z': '--..', '0': '-----', '1': '.----', '2': '..---', '3': '...--', '4': '....-',
            '5': '.....', '6': '-....', '7': '--...', '8': '---..', '9': '----.', '.': '.-.-.-', ',': '--..--',
            '?': '..--..', "'": '.----.', '!': '-.-.--', '/': '-..-.', '(': '-.--.', ')': '-.--.-', '&': '.-...',
            ':': '---...', ';': '-.-.-.', '=': '-...-', '+': '.-.-.', '-': '-....-', '_': '..--.-', '"': '.-..-.',
            '$': '...-..-', '@': '.--.-.', ' ': '/'
        }
 
    def translate_to_morse(self, text: str) -> str:

        text = text.upper() #makes all inputed text upper case for dictionary
 
        morse_code = [self.morse_code_dict.get(char, '') for char in text]

        morse_code_text = ' '.join(morse_code)
        if text == "":
            morse_code += "/" #when there is a space it fills it with a /
        return morse_code_text

while True:
    translator = MorseCodeTranslator()
    text = input("Enter Morse message:") #defines text as an input 
    morse_code = translator.translate_to_morse(text) #translates input into morse code 
    ledr.value = True 

    if text == "-q": # if statement for -q quit system 
        print("invalid input")
        break # breaks loop

    else: #if text doesn't equal -q then print the translation 
        print(f"Morse Code: {morse_code}")

    if morse_code == ".":
        ledr.value = True
        time.sleep(.4)
        ledr.value = False
