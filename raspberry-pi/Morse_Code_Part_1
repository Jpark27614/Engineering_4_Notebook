#type:ignore
import time

MORSE_CODE = { 'A':'.-', 'B':'-...',
    'C':'-.-.', 'D':'-..', 'E':'.',
    'F':'..-.', 'G':'--.', 'H':'....',
    'I':'..', 'J':'.---', 'K':'-.-',
    'L':'.-..', 'M':'--', 'N':'-.',
    'O':'---', 'P':'.--.', 'Q':'--.-',
    'R':'.-.', 'S':'...', 'T':'-',
    'U':'..-', 'V':'...-', 'W':'.--',
    'X':'-..-', 'Y':'-.--', 'Z':'--..',
    '1':'.----', '2':'..---', '3':'...--',
    '4':'....-', '5':'.....', '6':'-....',
    '7':'--...', '8':'---..', '9':'----.',
    '0':'-----', ', ':'--..--', '.':'.-.-.-',
    '?':'..--..', '/':'-..-.', '-':'-....-',
    '(':'-.--.', ')':'-.--.-'}

# def decode(MorseCode):
#     MorseCodeDict=MorseCode.split('')
#     output = []
#     for Morse in MorseCodeDict
#         try:
#             output.append(MORSE_CODE[Morse])
#         except:
#             if Morse == '':
#             output.append('')
#         else:
#             pass
#     return ''.join(output)


for letter in message:

    if letter == "-q":
        break

while True:
    try:
            MORSE_CODE = map(float, input("Enter Morse Code message, or enter -q").split("''"))
        except = -q: #if the input is not in proper syntax prints the error code 
        return MORSE_CODE